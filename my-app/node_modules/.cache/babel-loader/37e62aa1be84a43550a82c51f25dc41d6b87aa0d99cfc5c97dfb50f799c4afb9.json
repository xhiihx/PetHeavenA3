{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Isa\\\\Desktop\\\\my-app\\\\src\\\\components\\\\ShowCat.js\",\n  _s = $RefreshSig$();\nimport \"./styles.css\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Resource = ({\n  path,\n  render\n}) => {\n  _s();\n  const initialState = {\n    trans: [],\n    loading: true,\n    error: null\n  };\n  const [state, setState] = useState(initialState);\n  const getData = async () => {\n    try {\n      const result = await axios.get(path);\n      console.log(' result ', result);\n      const newData = {\n        trans: result.data,\n        loading: false,\n        error: null\n      };\n      setState(newData);\n    } catch (error) {\n      console.log('error in get data', error.message);\n    }\n  };\n};\n_s(Resource, \"2/eSVXfk2V5ZKttKXeUPXMa6Sd8=\");\n_c = Resource;\nconst ShowCat = () => {\n  const webURL = 'https://api.thecatapi.com/v1/images/search/?limit=15&page=100&order=DESC';\n  const render = data => {\n    if (data.loading === true) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 47\n    }, this);\n    console.log('Got the data', data);\n    return data.trans.map(cat => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"image\",\n        src: cat.url,\n        alt: \"cat img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)\n    }, cat.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Resource, {\n      path: webURL,\n      render: render\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 13\n  }, this);\n};\n_c2 = ShowCat;\nexport default ShowCat;\nvar _c, _c2;\n$RefreshReg$(_c, \"Resource\");\n$RefreshReg$(_c2, \"ShowCat\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Resource","path","render","_s","initialState","trans","loading","error","state","setState","getData","result","get","console","log","newData","data","message","_c","ShowCat","webURL","children","fileName","_jsxFileName","lineNumber","columnNumber","map","cat","className","src","url","alt","id","_c2","$RefreshReg$"],"sources":["C:/Users/Isa/Desktop/my-app/src/components/ShowCat.js"],"sourcesContent":["import \"./styles.css\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Resource = ({ path, render }) => {\r\n\r\n    const initialState = {\r\n        trans: [],\r\n        loading: true,\r\n        error: null\r\n    }\r\n\r\n    const [state, setState] = useState(initialState);\r\n\r\n    const getData = async () => {\r\n\r\n        try {\r\n\r\n            const result = await axios.get(path);\r\n\r\n            console.log(' result ', result);\r\n\r\n            const newData = {\r\n                trans: result.data,\r\n                loading: false,\r\n                error: null\r\n            }\r\n\r\n            setState(newData);\r\n\r\n        } catch (error) {\r\n\r\n            console.log('error in get data', error.message)\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n    const ShowCat = () => {\r\n\r\n        const webURL = 'https://api.thecatapi.com/v1/images/search/?limit=15&page=100&order=DESC'\r\n\r\n        const render = (data) => {\r\n\r\n            if (data.loading === true) return <p>loading ...</p>\r\n\r\n            console.log('Got the data', data);\r\n\r\n            return (data.trans.map(cat => (\r\n\r\n                <div key={cat.id} >\r\n\r\n                    <img className='image' src={cat.url} alt='cat img' />\r\n\r\n                </div>\r\n            )\r\n            )\r\n\r\n            )\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n\r\n                <Resource path={webURL} render={render} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    export default ShowCat;"],"mappings":";;AAAA,OAAO,cAAc;AACrB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAEnC,MAAMC,YAAY,GAAG;IACjBC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,IAAI;IACbC,KAAK,EAAE;EACX,CAAC;EAED,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAACS,YAAY,CAAC;EAEhD,MAAMM,OAAO,GAAG,MAAAA,CAAA,KAAY;IAExB,IAAI;MAEA,MAAMC,MAAM,GAAG,MAAMd,KAAK,CAACe,GAAG,CAACX,IAAI,CAAC;MAEpCY,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,MAAM,CAAC;MAE/B,MAAMI,OAAO,GAAG;QACZV,KAAK,EAAEM,MAAM,CAACK,IAAI;QAClBV,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;MACX,CAAC;MAEDE,QAAQ,CAACM,OAAO,CAAC;IAErB,CAAC,CAAC,OAAOR,KAAK,EAAE;MAEZM,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEP,KAAK,CAACU,OAAO,CAAC;IACnD;EAGJ,CAAC;AACL,CAAC;AAAAd,EAAA,CAjCKH,QAAQ;AAAAkB,EAAA,GAARlB,QAAQ;AAoCV,MAAMmB,OAAO,GAAGA,CAAA,KAAM;EAElB,MAAMC,MAAM,GAAG,0EAA0E;EAEzF,MAAMlB,MAAM,GAAIc,IAAI,IAAK;IAErB,IAAIA,IAAI,CAACV,OAAO,KAAK,IAAI,EAAE,oBAAOP,OAAA;MAAAsB,QAAA,EAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;IAEpDZ,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEE,IAAI,CAAC;IAEjC,OAAQA,IAAI,CAACX,KAAK,CAACqB,GAAG,CAACC,GAAG,iBAEtB5B,OAAA;MAAAsB,QAAA,eAEItB,OAAA;QAAK6B,SAAS,EAAC,OAAO;QAACC,GAAG,EAAEF,GAAG,CAACG,GAAI;QAACC,GAAG,EAAC;MAAS;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GAF/CE,GAAG,CAACK,EAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIX,CAET,CAAC;EAGL,CAAC;EAID,oBACI1B,OAAA;IAAAsB,QAAA,eAEItB,OAAA,CAACC,QAAQ;MAACC,IAAI,EAAEmB,MAAO;MAAClB,MAAM,EAAEA;IAAO;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzC,CAAC;AAEd,CAAC;AAAAQ,GAAA,GAhCKd,OAAO;AAkCb,eAAeA,OAAO;AAAC,IAAAD,EAAA,EAAAe,GAAA;AAAAC,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}